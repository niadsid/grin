<!DOCTYPE html>
<html manifest="app.manifest">
	<head>
		<title><%= title %></title>
		<%= stylesheet_link_tag :all %>
		<%= javascript_include_tag :defaults %>
		<%= csrf_meta_tag %>

 		<%= javascript_include_tag 'sencha-touch' %>		
		<%= stylesheet_link_tag 'sencha-touch' %>
		
		<meta name="apple-mobile-web-app-capable" content="yes" /> 
		<meta name="apple-mobile-web-app-status-bar-style" content="black" />
		
		<link rel="apple-touch-icon" href="/images/run_button_57x57.png"/>
		
		<!-- startup image for web apps - iPhone - landscape (1024x748) -->
		<link rel="apple-touch-startup-image" href="/images/iphone_loading.png" media="screen and (min-device-width: 320px) and (max-device-width: 1024px) and (orientation:landscape)" />
		<!-- startup image for web apps - iPhone - portrait (768x1024) -->
		<link rel="apple-touch-startup-image" href="/images/iphone_loading.png" media="screen and (min-device-width: 320px) and (max-device-width: 1024px) and (orientation:portrait)" />
		
		<style>
			.listbox_top_left {
				font-family: Arial, Helvetica, sans-serif;
				position:absolute;
				float:left;
				top:5px;
				left:5px;
				color: #244061;
				font-size: 20px;
				font-weight:800;
				float: left;
			}
			
			.listbox_bottom_left {
				position:absolute;
				float:left;
				bottom:0px;
				font-family: Arial, Helvetica, sans-serif;
				font-weight:100;
				left:5px;
				color: #244061;
				font-size: 12px;
				font-style:italic;

			}
			
			.listbox_top_right {
				font-family: Arial, Helvetica, sans-serif;
				font-weight:100;
				position:absolute;
				float:right;
				top:5px;
				right:5px;
				color: #244061;
				font-size: 16px;
			}
			
			.listbox_bottom_right {
				position:absolute;
				float:right;
				bottom:0px;
				right:5px;
				font-family: Arial, Helvetica, sans-serif;
				color: #244061;
				font-size: 12px;
				font-weight:100;
			}
			
			.tempempty {
				font-family: Arial, Helvetica, sans-serif;
				font-size:14pt;
				text-align:center;
				vertical-align:middle;
			}
		</style>
		
		
		<script type="text/javascript" charset="utf-8">

			new Ext.regModel('Address', {
    			fields: ['system_names',
    					 'system_interfaces',
    					 'network_address',
    					 'subnet_display_name',
    					 'location_name']
			});

			var addressesListStore = new Ext.data.Store({
				autoLoad: true,
			    model: 'Address',
			    sorters: ['location_name',
			    	'system_names',
			    	'subnet_display_name',
			    	'network_address',
			    	'system_interfaces'],
				getGroupString: function(record) {
			        return record.get('location_name');
			   	},
			    proxy: {
		            type: 'ajax',
		            url : '/addresses/index.json',
		            reader: {
		                type: 'json'
		            }
		      	}
			});

			new Ext.regModel('Subnet', {
    			fields: ['subnet_identifier_with_mask',
    					 'subnet_name',
    					 'display_name',
    					 'location_name']
			});

			var subnetsListStore = new Ext.data.Store({
				autoLoad: true,
			    model: 'Subnet',
			    sorters: ['location_name',
			    	'subnet_identifier_with_mask',
			    	'display_name',
			    	'subnet_name'],
				getGroupString: function(record) {
			        return record.get('location_name');
			   	},
			    proxy: {
		            type: 'ajax',
		            url : '/subnets/index.json',
		            reader: {
		                type: 'json'
		            }
		      	}
			});

			new Ext.Application({
				name: 'Grin',
				launch: function() {
				new Ext.TabPanel({
						fullscreen: true,
					    tabBar: {
					        dock: 'bottom',
					        ui: 'dark',
					        layout: {
					            pack: 'center'
					        }
					    },
					    cardSwitchAnimation: {type: 'slide', cover: true},
					    defaults: {scroll: 'vertical'},
					    items: [{
					        title: 'Systems',
					        iconCls: 'search',

					        items: [{
									xtype: 'toolbar',
									dock: 'top',
									title: 'Systems'
								},{
									xtype: 'toolbar',
									scroll: 'vertical',
									items: [{
										xtype: 'searchfield',
										name : 'search_by_system',
										placeHolder: 'Search...',
										listeners: {
			                                scope: this,
			                                
			                                keyup: function(field) {
			                                    var value = field.getValue();

			                                    if (!value) {
			                                        addressesListStore.filterBy(function() {
			                                            return true;
			                                        });
			                                    } else {
			                                        var searches = value.split(' '),
			                                            regexps  = [],
			                                            i;
			                                        
			                                        for (i = 0; i < searches.length; i++) {
			                                            if (!searches[i]) return;
			                                            regexps.push(new RegExp(searches[i], 'i'));
			                                        };
			                                        
			                                        addressesListStore.filterBy(function(record) {
			                                            var matched = [];
			                                            
			                                            for (i = 0; i < regexps.length; i++) {
			                                                var search = regexps[i];
			                                                
			                                                if (record.get('system_names').match(search) || record.get('network_address').match(search)) matched.push(true);
			                                                else matched.push(false);
			                                            };
			                                            
			                                            if (regexps.length > 1 && matched.indexOf(false) != -1) {
			                                                return false;
			                                            } else {
			                                                return matched[0];
			                                            }
			                                        });
			                                    }
			                                }
			                            }
								}]
							},{
								width: Ext.is.Phone ? undefined : 300,
								height: 500,
								xtype: 'list',
								store: addressesListStore,
								itemTpl: '<div class="listbox_top_left">{system_names}</div><div class="listbox_top_right">{network_address}</div><div class="listbox_bottom_left">{subnet_display_name}</div><div class="listbox_bottom_right">{system_interfaces}</div>',
								itemSelector: 'div.listbox_top_left',
								singleSelect: true,
								grouped: true,
								indexBar: false
							}]
					    },{
							title: 'Subnets',
					        iconCls: 'locate',
					        
							items: [{
									xtype: 'toolbar',
									dock: 'top',
									title: 'Subnets'
								},{
									xtype: 'toolbar',
									scroll: 'vertical',
									items: [{
										xtype: 'searchfield',
										name : 'search_for_subnets',
										placeHolder: 'Search...',
										listeners: {
			                                scope: this,
			                                
			                                
			                                keyup: function(field) {
			                                    var value = field.getValue();
	
			                                    if (!value) {
			                                        subnetsListStore.filterBy(function() {
			                                            return true;
			                                        });
			                                    } else {
			                                        var searches = value.split(' '),
			                                            regexps  = [],
			                                            i;
			                                        
			                                        for (i = 0; i < searches.length; i++) {
			                                            if (!searches[i]) return;
			                                            regexps.push(new RegExp(searches[i], 'i'));
			                                        };
			                                        
			                                        subnetsListStore.filterBy(function(record) {
			                                            var matched = [];
			                                            
			                                            for (i = 0; i < regexps.length; i++) {
			                                                var search = regexps[i];
			                                                
			                                                if (record.get('subnet_identifier_with_mask').match(search) || record.get('display_name').match(search) || record.get('subnet_name').match(search)) matched.push(true);
			                                                else matched.push(false);
			                                            };
			                                            
			                                            if (regexps.length > 1 && matched.indexOf(false) != -1) {
			                                                return false;
			                                            } else {
			                                                return matched[0];
			                                            }
			                                        });
			                                    }
			                                }
			                            }
									}]
								},{
								width: Ext.is.Phone ? undefined : 300,
								height: 500,
								xtype: 'list',
								store: subnetsListStore,
								itemTpl: '<div class="listbox_top_left">{subnet_identifier_with_mask}</div><div class="listbox_top_right"></div><div class="listbox_bottom_left">{display_name}</div><div class="listbox_bottom_right">{subnet_name}</div>',
								itemSelector: 'div.listbox_top_left',
								singleSelect: true,
								grouped: true,
								indexBar: false
							}]
					    },{
							title: 'Settings',
					        iconCls: 'settings',
					        cls: 'tempempty',
							html: '<br><br><br><br>Settings<br><br><br><br>Nothing to see here - move along',
					    },{
					        title: 'About',
					        fullscreen: true,
					        iconCls: 'info',
					        cls: 'tempempty',
							html: '<br><br><br><br>About<br><br><br><br>&copy; 2011 Run Corporation 2011<br><br><br>David Westgate<br>'
					    }]
					});
				}
			});
		</script>
	</head>

	<body>
<!-- 		
		<div id="example"></div>

		<script type="text/javascript">
		
			txt = "<p>Browser CodeName: " + navigator.appCodeName + "</p>";
			txt+= "<p>Browser Name: " + navigator.appName + "</p>";
			txt+= "<p>Browser Version: " + navigator.appVersion + "</p>";
			txt+= "<p>Cookies Enabled: " + navigator.cookieEnabled + "</p>";
			txt+= "<p>Platform: " + navigator.platform + "</p>";
			txt+= "<p>User-agent header: " + navigator.userAgent + "</p>";
			
			document.getElementById("example").innerHTML=txt;
		
		</script>
		
		<h1>iPhone</h1> -->
	</body>
</html>
